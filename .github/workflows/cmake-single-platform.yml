# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
    - name: Download PVS-Studio
      run: curl -L "https://cdn.pvs-studio.com/PVS-Studio_setup.exe" -o PVS-Studio_setup.exe
      shell: cmd
    - name: Install PVS-Studio
      run: ./PVS-Studio_setup.exe /verysilent /suppressmsgboxes \
          /nocloseapplications /norestart \
          /components= Core, Standalone
          "C:\Program Files (x86)\PVS-Studio/PVS-Studio_Cmd.exe" --userName ${{ secrets.USER_NAME }} --licenseKey ${{ secrets.LICSESE_KEY }}.
    - name: Analyze
      run: |
          "C:\Program Files (x86)\PVS-Studio\CompilerCommandsAnalyzer.exe" analyze -f build/compile_commands.json -j
      shell: cmd
    - name: Convert report
      run: |
          "C:\Program Files (x86)\PVS-Studio\logConverter.exe" -a GA:1,2 -t Sarif -o pvs-report.sarif PVS-Studio.log
      shell: cmd
    - name: Publish report
      uses: github/codeql-action/upload-sarif@v1
      with:
          sarif_file: pvs-report.sarif
          category: PVS-Studio

